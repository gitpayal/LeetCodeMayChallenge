In a town, there are N people labelled from 1 to N.  There is a rumor that one of these people is secretly the town judge.

If the town judge exists, then:

The town judge trusts nobody.
Everybody (except for the town judge) trusts the town judge.
There is exactly one person that satisfies properties 1 and 2.
You are given trust, an array of pairs trust[i] = [a, b] representing that the person labelled a trusts the person labelled b.

If the town judge exists and can be identified, return the label of the town judge.  Otherwise, return -1.

/**
 * @param {number} N
 * @param {number[][]} trust
 * @return {number}
 */
var findJudge = function(N, trust) {
  if(trust.length<N-1) return -1;
  if(N==1 && trust.length==0) return 1;
 
    let iTrust ={};
    let otherTrust={};
    let townJudge = -1;
    for(let i=0;i<trust.length;i++){
      let trustee =trust[i][0];
      let trusted =trust[i][1];
      iTrust[trustee] = true
      otherTrust[trusted] =otherTrust[trusted]? otherTrust[trusted]+1:1
    }
  
  let keyArray = Object.keys(otherTrust);
  for(let i=0;i<keyArray.length;i++){
    let current = keyArray[i]
    if(otherTrust[current] && otherTrust[current] ==N-1 && !iTrust[current]){
      townJudge = current
    }
  }
  return townJudge;
};

